plugins {
    id 'java'
    id 'com.google.protobuf' version '0.9.4'
    id 'idea'
    id 'application'
    id 'visual-studio'
}

group 'com.nikhilm'

sourceCompatibility = 1.11

def grpcVersion = '1.62.2'
def protobufVersion = '3.25.3'
def baseVersion = '3.9.4'
def baseGroupId = 'io.github.adempiere'
def privateDependencyBaseVersion = "adempiere-3.9.4"
def descriptorFile = "adempiere-processors-service.dsc"

startScripts.enabled = false

ext {
	javaMainClass = "org.spin.processor.server.ProcessorServer"
}

application {
	mainClass.set(javaMainClass)
}
jar {
	manifest {
		attributes(
			"Main-Class": javaMainClass
		)
	}
}

repositories {
	mavenLocal()
    mavenCentral()
    maven {
		// Adempiere GitHub Organization
		url = 'https://maven.pkg.github.com/solop-develop/adempiere-solop'
		credentials {
			// project property, system properrty, enviroment variable
			username = findProperty("deployUsername") ?: System.properties['deploy.user'] ?: System.getenv("GITHUB_DEPLOY_USER")
			password = findProperty("deployToken") ?: System.properties['deploy.token'] ?: System.getenv("GITHUB_DEPLOY_TOKEN")
		}
	}
    maven {
		// Adempiere GitHub Organization
		url = 'https://maven.pkg.github.com/adempiere/adempiere'
		credentials {
			// project property, system properrty, enviroment variable
			username = findProperty("deployUsername") ?: System.properties['deploy.user'] ?: System.getenv("GITHUB_DEPLOY_USER")
			password = findProperty("deployToken") ?: System.properties['deploy.token'] ?: System.getenv("GITHUB_DEPLOY_TOKEN")
		}
	}
	maven {
		// Solop Uruguay Location GitHub Organization
		url = 'https://maven.pkg.github.com/spuy/spuy-core'
		credentials {
			// project property, system properrty, enviroment variable
			username = findProperty("deployUsername") ?: System.properties['deploy.user'] ?: System.getenv("GITHUB_DEPLOY_USER")
			password = findProperty("deployToken") ?: System.properties['deploy.token'] ?: System.getenv("GITHUB_DEPLOY_TOKEN")
		}
	}
}
protobuf {
    protoc {
		artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    plugins {
        grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
        all().configureEach { task ->
			// If true, will generate a descriptor_set.desc file under
			// task.outputBaseDir. Default is false.
			// See --descriptor_set_out in protoc documentation about what it is.
			task.generateDescriptorSet = true
			
			// Allows to override the default for the descriptor set location
			task.descriptorSetOptions.path = "${projectDir}/build/descriptors/${descriptorFile}"
			// task.descriptorSetOptions.path = "${projectDir}/build/descriptors/adempiere-processors-service.dsc"
			
			// If true, the descriptor set will contain line number information
			// and comments. Default is false.
			task.descriptorSetOptions.includeSourceInfo = true
			
			// If true, the descriptor set will contain all transitive imports and
			// is therefore self-contained. Default is false.
			task.descriptorSetOptions.includeImports = true
		}
	}
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
            srcDirs 'src/main/proto'
        }
    }
}

// Copy proto descriptor another folder
allprojects {
	task copyDescriptor(type: Copy) {
		from "${projectDir}/build/descriptors/${descriptorFile}"
		into "${projectDir}/docker-compose/envoy/definitions"
		// rename { "${descriptorFile}" }
	}

	tasks.matching {
		it.name.startsWith('compileJava')
	}.each { task ->
		task.finalizedBy copyDescriptor
	}
}

task AdempiereProcessorServer(type: CreateStartScripts) {
	mainClass = javaMainClass
    applicationName = 'adempiere-processors-service-server'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtimeClasspath
}

applicationDistribution.into('bin') {
	from(AdempiereProcessorServer)
    fileMode = 0755
}

//	Create release for project
task createRelease(type: Copy) {
   dependsOn build
   from file("$buildDir/distributions/")
   into file("$buildDir/release/")
   //destinationDir(file('build/release/'))
   doLast {
        file('build/release/')
        	.listFiles({file -> file.isFile()} as FileFilter).sort()
        	.each { File file ->
            ant.checksum file: file
        }
   	}
}
dependencies {
	implementation fileTree(
        dir: 'dependencies',
        include: [
            '*.jar'
        ]
    )
	implementation "io.grpc:grpc-netty-shaded:${grpcVersion}"
	implementation "io.grpc:grpc-alts:${grpcVersion}"
	implementation "io.netty:netty-handler:4.1.107.Final"
	implementation "io.grpc:grpc-protobuf:${grpcVersion}"
	implementation "io.grpc:grpc-stub:${grpcVersion}"
	implementation "io.grpc:grpc-netty:${grpcVersion}"
	// https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
	implementation "com.google.protobuf:protobuf-java:${protobufVersion}"
	implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"

    implementation "io.jsonwebtoken:jjwt-api:0.12.6"
	implementation "io.jsonwebtoken:jjwt-impl:0.12.6"
	implementation "io.jsonwebtoken:jjwt-jackson:0.12.6"
    //implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
	//implementation 'com.sun.xml.bind:jaxb-impl:3.0.0-M4'
	//implementation 'com.sun.xml.bind:jaxb-core:3.0.0-M4'
	//implementation 'javax.activation:activation:1.1.1'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.17.0'
	//	Others
    compileOnly 'org.apache.tomcat:annotations-api:6.0.53'
    //implementation 'uy.solop:050-spuy-core:3.9.4-r-17.12'
    //	ADempiere Core + Patches + Features
	implementation "com.solop:adempiere.solop_libs:3.9.4.001-spuy-0.0.1-rc-7"
	//implementation 'javaee:javaee-api:5'
	//implementation 'com.sun.mail:javax.mail:1.6.2'
}
